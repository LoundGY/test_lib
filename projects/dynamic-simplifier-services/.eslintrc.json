{
  "root": true,
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:@typescript-eslint/recommended",
        // "plugin:sonarjs/recommended", // TODO: enable this plugin when there's time to fix all the issues
        "plugin:jsdoc/recommended",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          {
            "prefix": "app|itop|test",
            "style": "kebab-case",
            "type": "element"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "prefix": "app|itop|focus|drop|mat|test",
            "style": "camelCase",
            "type": "attribute"
          }
        ],
        "@angular-eslint/no-host-metadata-property": "off",
        "default-case": "error",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/explicit-module-boundary-types": [
          "warn",
          {
            "allowArgumentsExplicitlyTypedAsAny": true,
            "allowedNames": [
              "ngOnInit",
              "ngOnDestroy",
              "onKeyUp",
              "ngAfterViewInit",
              "ngOnChanges",
              "ngAfterContentChecked",
              "ngDoCheck",
              "onKeydown",
              "onEnter"
            ]
          }
        ],
        "@typescript-eslint/no-empty-function": [
          "error",
          { "allow": ["arrowFunctions"] }
        ],
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/typedef": [
          "warn",
          {
            "memberVariableDeclaration": true,
            "variableDeclaration": true,
            "variableDeclarationIgnoreFunction": true
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "warn",
          {
            "accessibility": "explicit",
            "overrides": {
              "constructors": "off"
            }
          }
        ],
        "@typescript-eslint/member-ordering": "off", // TODO: discuss this rule
        "@typescript-eslint/strict-boolean-expressions": "off", // TODO: switch this to error when all warnings are fixed
        "jsdoc/newline-after-description": "off",
        "jsdoc/require-param-description": "off",
        "jsdoc/require-returns-description": "off"
      }
    },
    {
      "files": ["*.html"],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "@angular-eslint/template/no-negated-async": "off",
        "@angular-eslint/template/no-call-expression": "warn",
        "@angular-eslint/template/eqeqeq": [
          "error",
          {
            "allowNullOrUndefined": true // because "x == null" checks for both null and undefined
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "excludedFiles": ["*inline-template-*.component.html"],
      "extends": [
        "plugin:@angular-eslint/template/recommended",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "prettier/prettier": ["error", { "parser": "angular" }],
        "@angular-eslint/template/no-negated-async": "off",
        "@angular-eslint/template/no-call-expression": "warn",
        "@angular-eslint/template/eqeqeq": [
          "error",
          {
            "allowNullOrUndefined": true // because "x == null" checks for both null and undefined
          }
        ]
      }
    }
  ]
}
